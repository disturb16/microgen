basePath: /v1
consumes:
- application/json
definitions:
  GetHandlerInput:
    description: getHandler parameters
    properties:
      age:
        format: int32
        type: integer
        x-go-name: Age
      name:
        type: string
        x-go-name: Name
    type: object
    x-go-package: mymodule/test/internal/api/v1/dtos
host: localhost:8080
info:
  description: |-
    Base/example service to help with efficiently
    and excellently producing of new microservices
  title: Goproposal
  version: "1.0"
paths:
  /test:
    get:
      description: Get User info
      operationId: getHandler
      parameters:
      - in: query
        name: name
        type: string
        x-go-name: Name
      - format: int32
        in: query
        name: age
        type: integer
        x-go-name: Age
      produces:
      - application/json
      responses:
        "200":
          $ref: '#/responses/handlerResponse'
        "400": {}
      security:
      - api_key: []
    post:
      description: Post User info
      operationId: postHandler
      parameters:
      - in: query
        name: name
        type: string
        x-go-name: Name
      - format: int32
        in: query
        name: age
        type: integer
        x-go-name: Age
      produces:
      - application/json
      responses:
        "201": {}
        "400": {}
      security:
      - api_key: []
produces:
- application/json
responses:
  handlerResponse:
    headers:
      data: {}
    schema:
      $ref: '#/definitions/GetHandlerInput'
schemes:
- http
security:
- api_key: []
securityDefinitions:
  api_key:
    in: header
    name: api-key
    type: apiKey
swagger: "2.0"
